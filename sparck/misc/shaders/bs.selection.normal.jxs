<jittershader name="normal">
	<description>
	shader to capture normal
	</description>
	<param name="world_matrix" type="mat4" state="WORLD_MATRIX" />

	<language name="glsl" version="1.0">
        <bind param="world_matrix" program="vp" />
	
        <program name="vp" type="vertex">
<![CDATA[

// MIT License
// Martin Froehlich for tecartlab.com
// Copyright 2020 - tecartlab.com
#version 120

uniform mat4 world_matrix;

varying vec4 position;
varying vec3 normal;	// surface normal

void main (void){
	position = gl_ModelViewMatrix * gl_Vertex;
	normal = normalize(mat3(world_matrix) * gl_Normal);
   	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[

varying vec4 position;
varying vec3 normal;	// surface normal

void main (void){
	gl_FragColor = vec4(normal.xyz, 1.0);
}
]]>
		</program>
	</language>
</jittershader>
