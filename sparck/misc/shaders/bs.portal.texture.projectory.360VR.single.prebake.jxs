<jittershader name="bs.portal.tex.proj.multi.direction.6-beam.jxs">
	<description>SPARCK - multi projection - Shader</description>
	<param name="mode" type="int" default="0" />
	<param name="stage_mode" type="int" default="0" />
	<param name="projection_mode" type="float" default="0" />
	
	<param name="beamer_enable" type="float" default="0. 0. 0. 0. 0. 0." description="value 0 if off or camera type (cam_params)" />
	<param name="beamer_count" type="int" default="0" />

	<param name="beamer_color" type="vec4" default="1. 0. 0. 1. 0. 1. 0. 1. 0. 0. 1. 1. 0. 1. 1. 1. 1. 0. 1. 1. 1. 1. 0. 1." />
	<param name="offColor" type="vec4" default="0. 0. 0. 1." />

 	<param name="beamer_pos" type="vec3" default="0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0." />
	<param name="beamer_dir" type="vec3" default="0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1." />
	<param name="beamer_up" type="vec3" default="1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0." />

	<param name="beamer_m_matrix" type="mat4" default="1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1." />
	<param name="beamer_v_matrix" type="mat4" default="0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0." />
	<param name="beamer_p_matrix" type="mat4" default="0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0." />
	<param name="world_matrix" type="mat4" state="WORLD_MATRIX" />
	<param name="viewport_matrix" type="mat4" default="0.5 0. 0. 0. 0. 0.5 0. 0. 0. 0. 0.5 0. 0.5 0.5 0.5 0." />

	<param name="bevel_size" type="float" default="0. 0. 0. 0. 0. 0." />
	<param name="bevel_curve" type="float" default="1. 1. 1. 1. 1. 1." />
	<param name="bevel_round" type="int" default="0 0 0 0 0 0" />

	<param name="angle_mode" type="float" default="0.0" />

	<param name="angle_limit" type="float" default="0. 0. 0. 0. 0. 0." />
	<param name="angle_falloff" type="float" default="0.3 0.3 0.3 0.3 0.3 0.3" />
	<param name="angle_limit_low" type="float" default="0. 0. 0. 0. 0. 0." />
	<param name="angle_limit_high" type="float" default="0.2 0.2 0.2 0.2 0.2 0.2" />

	<param name="far_clip" type="float" default="0. 0. 0. 0. 0. 0." />

	<param name="blend_spread" type="float" default="1.0" />
	<param name="back_blend" type="float" default="1." />
	<param name="distance_influence" type="float" default="1." />

	<param name="interpolation_correction" type="float" default="0.1" />

	<param name="collada_factor" type="mat4" default="1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1." />

	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
	<param name="tex2" type="int" default="2" />
	<param name="tex3" type="int" default="3" />
	<param name="tex4" type="int" default="4" />
	<param name="tex5" type="int" default="5" />

	<language name="glsl" version="1.2">
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<bind param="tex2" program="fp" />
		<bind param="tex3" program="fp" />
		<bind param="tex4" program="fp" />
		<bind param="tex5" program="fp" />

		<bind param="beamer_count" program="fp" />
		<bind param="beamer_color" program="fp" />

		<bind param="bevel_size" program="fp" />
		<bind param="bevel_curve" program="fp" />
		<bind param="bevel_round" program="fp" />

		<bind param="beamer_pos" program="fp" />
		<bind param="beamer_dir" program="fp" />

		<bind param="beamer_v_matrix" program="vp" />
		<bind param="beamer_p_matrix" program="vp" />

		<bind param="projection_mode" program="fp" />
		<bind param="stage_mode" program="fp" />
		<bind param="mode" program="fp" />

		<bind param="blend_spread" program="fp" />
		<bind param="back_blend" program="fp" />
		<bind param="distance_influence" program="fp" />
		<bind param="angle_mode" program="fp" />

		<bind param="angle_limit_low" program="fp" />
		<bind param="angle_limit_high" program="fp" />

		<bind param="far_clip" program="fp" />

		<bind param="offColor" program="fp" />

		<bind param="world_matrix" program="vp" />
		<bind param="collada_factor" program="vp" />
		<bind param="interpolation_correction" program="vp" />
		<bind param="viewport_matrix" program="vp" />

		<program name="vp" type="vertex" source="bs.portal.pass.bakery.6.vs.gl2.glsl" />

		<program name="fp" type="fragment">
<![CDATA[

// MIT License
// Martin Froehlich for tecartlab.com
// Copyright 2020 - tecartlab.com

#version 120
#extension GL_ARB_texture_rectangle : enable

/*
	Multifunctional texture projection shader with full feature set.
*/

uniform float projection_mode;
uniform int stage_mode;
uniform int mode;

// samplers
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform sampler2DRect tex2;
uniform sampler2DRect tex3;
uniform sampler2DRect tex4;
uniform sampler2DRect tex5;

uniform int beamer_count;
uniform vec4 beamer_color[6];

uniform mat4 beamer_v_matrix[6];

uniform vec3 beamer_pos[6];
uniform vec3 beamer_dir[6];

uniform float bevel_size[6];
uniform float bevel_curve[6];
uniform int bevel_round[6];

uniform vec4 offColor; 	// off color

uniform float distance_influence;
uniform float back_blend;
uniform float blend_spread;
uniform float angle_mode;

uniform float angle_limit_low[6];
uniform float angle_limit_high[6];

uniform float far_clip[6];

uniform float interpolation_correction;

// generated by the vertex shader

varying vec4 beamer_uv[6];		// beamer uv position
varying vec2 beamer_texcoord[6];// beamer texcoord

varying vec3 normal;	// surface normal
varying vec3 worldPos;	// vertex world position


// constants

const float PI = 3.1415926535897932384626433832795;
const float PI_HALF = PI / 2.0;
const vec4 WHITE = vec4( 1.0, 1.0, 1.0, 1.0);
const vec4 BLACK = vec4( 0.0, 0.0, 0.0, 1.0);

// entry point
void main()
{
    vec2    proj_texcoord[6];
    vec4    proj_texUV[6];
	float	vcurve[6];
	float 	vangle[6];
	float 	spreadedAngle[6];
	int   	indexSort[6];

    mat4    rot_matrix;
	vec3 	ray, raynormal, viewline, vl_abs;
	vec2 	col;
	float 	curve, angle, linearCurve, powerCurve, visible, visible2, veepee, distancem, radius, theta, phi;
    int 	i, j;

  	for( i = 0; i < 6; i++){
		vcurve[i] = 0.0;
		vangle[i] = 0.0;
		spreadedAngle[i] = 0.0;
		indexSort[i] = i;
	}
    
    //Calculating the factor of importance for each beamer
	for( i = 0; i < beamer_count; i++){

        // calculate the viewray from the camera to this fragment
        ray = beamer_pos[0] - worldPos;
        raynormal = normalize(ray);
        
        // calculate the angle between the surface normal and the projected beam.
        // 		rsp. the angle between the surface normal and the projector direction.
        angle = dot(normal, raynormal);

        // sets from which side (back, both, front) it is visible
        angle = (projection_mode == 0.)? 1.:max(sign(angle * projection_mode), 0.);

        // calculate rotation matrix from beamer view matrix - its not accurate and cause problem if
        // the matrix is not scale = 1 1 1, but its a quick and functional fix that should not be a heavy
        // performance hit.
        rot_matrix = beamer_v_matrix[0];
        rot_matrix[3] = vec4(0., 0., 0., 1.); // the positional infos are removed.

        viewline = (rot_matrix * vec4(-ray, 1)).xyz;
        vl_abs = abs(viewline);

        // calculate the spherical coordinates
        radius = length(viewline);
        theta = atan(viewline.x, -viewline.z);
        phi = atan(sqrt(viewline.z*viewline.z+viewline.x*viewline.x),viewline.y);
        
        // calculate the equirectangular coordinates
        proj_texUV[i] = vec4((theta + PI) / (2 * PI), 1.0 - phi / PI, 0., 1.);
        proj_texcoord[i] = vec2(gl_TextureMatrix[i] * proj_texUV[i]);

        // check if we are still inside the farclip
        vcurve[i] = (far_clip[0] > radius)?angle: 0.;
    }

	gl_FragData[0] = (vcurve[0] > 0)?texture2DRect(tex0, proj_texcoord[0]):offColor;

}

]]>
		</program>
	</language>
</jittershader>
