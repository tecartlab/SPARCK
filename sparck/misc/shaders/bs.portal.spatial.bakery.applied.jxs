<jittershader name="bs.portal.spatial.se.bake.mask.6.jxs">
	<description>SPARCK - multi projection - Shader</description>
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
	<param name="tex2" type="int" default="2" />
	<param name="tex3" type="int" default="3" />
	<param name="tex4" type="int" default="4" />
	<param name="tex5" type="int" default="5" />
	<param name="tex6" type="int" default="6" />
	<param name="tex7" type="int" default="7" />

	<param name="mode" type="int" default="0" />

	<language name="glsl" version="1.2">
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<bind param="tex2" program="fp" />
		<bind param="tex3" program="fp" />
		<bind param="tex4" program="fp" />
		<bind param="tex5" program="fp" />
		<bind param="tex6" program="fp" />
		<bind param="tex7" program="fp" />

		<bind param="mode" program="fp" />

		<program name="vp" type="vertex">
<![CDATA[

// MIT License
// Martin Froehlich for tecartlab.com
// Copyright 2020 - tecartlab.com

#version 120

varying vec2 texcoord2;

void main(void)
{
	// perform standard transform on vertex
	gl_Position = ftransform();

 	texcoord2 = vec2(gl_TextureMatrix[2] * gl_MultiTexCoord2);
}

]]>
		</program>

		<program name="fp" type="fragment">
<![CDATA[
#version 120
#extension GL_ARB_texture_rectangle : enable

/*
	Multifunctional texture projection shader with full feature set.
*/

varying vec2 texcoord2;

uniform int mode;

// samplers
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform sampler2DRect tex2;
uniform sampler2DRect tex3;
uniform sampler2DRect tex4;
uniform sampler2DRect tex5;
uniform sampler2DRect tex6;
uniform sampler2DRect tex7;

// entry point
void main()
{

  vec4 color[7];
	color[0] = texture2DRect(tex0, texcoord2);
	color[1] = texture2DRect(tex1, texcoord2);
	color[2] = texture2DRect(tex2, texcoord2);
	color[3] = texture2DRect(tex3, texcoord2);
	color[4] = texture2DRect(tex4, texcoord2);
	color[5] = texture2DRect(tex5, texcoord2);
	color[6] = texture2DRect(tex6, texcoord2);

  gl_FragColor = color[mode];
}

]]>
		</program>
	</language>
</jittershader>
